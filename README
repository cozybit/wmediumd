This folder contains:

rawsocket/ 	-> Raw socket based ping-pong application to test stability and loss probability behaviour. 
wmediumd/ 	-> User space application to apply loss probability per link.
wconfig/	-> Java based tool to create advanced config files for wmediumd.
Dependencies:

[rawsocket] -> libpthread 
[wmediumd]  -> libnl 2.0, libconfig
[wconfig] -> Java JRE 6.0

***Compilation of applications***

Once all dependencies are satisfied, just execute make on the main folder, binaries and modules will be created on each folder.

***Execution of applications***

[wmediumd]

The user application is responsible for handling the frames sent from the kernel space, this sample application creates a simple probability matrix with the same probability values per link. 

- To launch the application in simulation mode and with probability matrix config (superuser is required) :

 $ cd wmediumd
 $ sudo ./wmediumd -c [FILE]

- To launch the application in simulation medium mobility mode (superuser is required and check for cfg-examples/mobility.cfg config file example):

 $ cd wmediumd
 $ sudo ./wmediumd -m [FILE]

Once launch it will show all the scenario configured parameters.

NOTE: It is necessary to provide a configuration file to start the simulation.
      Inside wmediumd/cfg-examples you can find multiple config file samples.


[rawsocket]

This a very simple Raw socket ping-pong application, developed to test the stability and behaviour of the mac80211_hwsim module. The application is composed from a server and a client. Server shows a counter of answered packets and clients shows sent and received back.


	CLIENT  ===========================================   SERVER
	
	FRAME sent ---------------- wmediumd ------------->   FRAME rcvd 
								  +
	FRAME rcvd <--------------- wmediumd---------------   FRAME sent (ACK)
								
								

 SERVER

 $ cd rawsocket
 $ sudo ./server [listening interface]

 CLIENT

 $ cd rawsocket
 $ sudo ./client [listening interface] [destination interface] [msec between frames]

[wconfig]

This is an extra tool based on JUNG framework to support the generation of advanced topologies for wireless medium daemon.

To launch the application:

 $ cd wconfig
 $ java - jar wconfig.jar 

Enjoy!
